-- MySQL Script generated by MySQL Workbench
-- 11/10/15 14:12:53
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema web_logickehry_db
-- -----------------------------------------------------
-- Databázový model pro Centrum Logických Her na NTIS

-- -----------------------------------------------------
-- Table `game_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `game_type` ;

CREATE TABLE IF NOT EXISTS `game_type` (
  `game_type_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `game_name` VARCHAR(45) NULL COMMENT '',
  `avg_playtime` INT NULL COMMENT '',
  `max_players` TINYINT UNSIGNED NULL COMMENT '',
  `min_players` TINYINT UNSIGNED NULL COMMENT '',
  PRIMARY KEY (`game_type_id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `game_box`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `game_box` ;

CREATE TABLE IF NOT EXISTS `game_box` (
  `game_box_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `game_type_id` INT NOT NULL COMMENT '',
  `tracking_code` VARCHAR(20) NOT NULL COMMENT '',
  `add_note` VARCHAR(800) NULL COMMENT '',
  PRIMARY KEY (`game_box_id`)  COMMENT '',
  INDEX `fk_game_box_game_type_idx` (`game_type_id` ASC)  COMMENT '',
  UNIQUE INDEX `tracking_code_UNIQUE` (`tracking_code` ASC)  COMMENT '',
  CONSTRAINT `fk_game_box_game_type`
    FOREIGN KEY (`game_type_id`)
    REFERENCES `game_type` (`game_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user` ;

CREATE TABLE IF NOT EXISTS `user` (
  `user_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `orion_login` VARCHAR(45) NOT NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `surname` VARCHAR(45) NULL COMMENT '',
  `description` VARCHAR(200) NULL COMMENT '',
  PRIMARY KEY (`user_id`)  COMMENT '',
  UNIQUE INDEX `orion_login_UNIQUE` (`orion_login` ASC)  COMMENT '',
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desk`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desk` ;

CREATE TABLE IF NOT EXISTS `desk` (
  `desk_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `capacity` INT NULL COMMENT '',
  PRIMARY KEY (`desk_id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `reservation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reservation` ;

CREATE TABLE IF NOT EXISTS `reservation` (
  `reservation_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `game_box_id` INT NOT NULL COMMENT '',
  `reservee_user_id` INT NOT NULL COMMENT '',
  `open_reservation` TINYINT(1) NULL COMMENT '',
  `time_from` DATETIME NULL COMMENT '',
  `time_to` DATETIME NULL COMMENT '',
  `desk_id` INT NULL COMMENT '',
  PRIMARY KEY (`reservation_id`)  COMMENT '',
  INDEX `fk_reservation_user1_idx` (`reservee_user_id` ASC)  COMMENT '',
  INDEX `fk_reservation_table1_idx` (`desk_id` ASC)  COMMENT '',
  INDEX `fk_reservation_game_box1_idx` (`game_box_id` ASC)  COMMENT '',
  CONSTRAINT `fk_reservation_user1`
    FOREIGN KEY (`reservee_user_id`)
    REFERENCES `user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reservation_table1`
    FOREIGN KEY (`desk_id`)
    REFERENCES `desk` (`desk_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reservation_game_box1`
    FOREIGN KEY (`game_box_id`)
    REFERENCES `game_box` (`game_box_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `reservation_users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reservation_users` ;

CREATE TABLE IF NOT EXISTS `reservation_users` (
  `reservation_id` INT NOT NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`user_id`, `reservation_id`)  COMMENT '',
  INDEX `fk_reservation_has_user_user1_idx` (`user_id` ASC)  COMMENT '',
  INDEX `fk_reservation_users_reservation1_idx` (`reservation_id` ASC)  COMMENT '',
  CONSTRAINT `fk_reservation_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reservation_users_reservation1`
    FOREIGN KEY (`reservation_id`)
    REFERENCES `reservation` (`reservation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `subscription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subscription` ;

CREATE TABLE IF NOT EXISTS `subscription` (
  `game_type_id` INT NOT NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`game_type_id`, `user_id`)  COMMENT '',
  INDEX `fk_game_type_has_user_user1_idx` (`user_id` ASC)  COMMENT '',
  INDEX `fk_game_type_has_user_game_type1_idx` (`game_type_id` ASC)  COMMENT '',
  CONSTRAINT `fk_game_type_has_user_game_type1`
    FOREIGN KEY (`game_type_id`)
    REFERENCES `game_type` (`game_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_game_type_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `game_rating`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `game_rating` ;

CREATE TABLE IF NOT EXISTS `game_rating` (
  `game_rating_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `game_type_id` INT NOT NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  `score` TINYINT NULL COMMENT '',
  `review` VARCHAR(400) NULL COMMENT '',
  INDEX `fk_game_type_has_user_user2_idx` (`user_id` ASC)  COMMENT '',
  INDEX `fk_game_type_has_user_game_type2_idx` (`game_type_id` ASC)  COMMENT '',
  PRIMARY KEY (`game_rating_id`)  COMMENT '',
  CONSTRAINT `fk_game_type_has_user_game_type2`
    FOREIGN KEY (`game_type_id`)
    REFERENCES `game_type` (`game_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_game_type_has_user_user2`
    FOREIGN KEY (`user_id`)
    REFERENCES `user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Placeholder table for view `subscribees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `subscribees` (`user_id` INT, `orion_login` INT, `name` INT, `surname` INT, `description` INT, `game_type_id` INT, `game_name` INT, `avg_playtime` INT, `max_players` INT, `min_players` INT);

-- -----------------------------------------------------
-- Placeholder table for view `ratings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ratings` (`name` INT, `orion_login` INT, `user_id` INT, `score` INT, `review` INT, `game_type_id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `game_type_w_score`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `game_type_w_score` (`game_type_id` INT, `game_name` INT, `avg_playtime` INT, `max_players` INT, `min_players` INT, `average_score` INT, `rating_count` INT, `subscribed_users` INT);

-- -----------------------------------------------------
-- Placeholder table for view `reservation_and_all`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `reservation_and_all` (`reservation_id` INT, `game_box_id` INT, `reservee_user_id` INT, `open_reservation` INT, `time_from` INT, `time_to` INT, `desk_id` INT, `borrower_name` INT, `tracking_code` INT, `game_name` INT, `min_players` INT, `max_players` INT, `desk_capacity` INT, `signed_players` INT);

-- -----------------------------------------------------
-- Placeholder table for view `user_extended`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user_extended` (`user_id` INT, `orion_login` INT, `name` INT, `surname` INT, `description` INT, `ratings` INT);

-- -----------------------------------------------------
-- View `subscribees`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `subscribees` ;
DROP TABLE IF EXISTS `subscribees`;
CREATE  OR REPLACE VIEW `subscribees` AS
SELECT user.*, game_type.* FROM subscription
JOIN user ON subscription.user_id = user.user_id
JOIN game_type ON subscription.game_type_id = game_type.game_type_id;

-- -----------------------------------------------------
-- View `ratings`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `ratings` ;
DROP TABLE IF EXISTS `ratings`;
CREATE  OR REPLACE VIEW `ratings` AS
    SELECT 
        CONCAT(user.name, ' ', user.surname) AS name,
        user.orion_login,
        user.user_id,
        game_rating.score,
        game_rating.review,
        game_rating.game_type_id
    FROM
        game_rating
            JOIN
        user ON game_rating.user_id = user.user_id;

-- -----------------------------------------------------
-- View `game_type_w_score`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `game_type_w_score` ;
DROP TABLE IF EXISTS `game_type_w_score`;
CREATE  OR REPLACE VIEW `game_type_w_score` AS
    SELECT 
        game_type.*,
        AVG(game_rating.score) AS average_score,
        COUNT(game_rating.user_id) AS rating_count,
        COUNT(subscription.user_id) AS subscribed_users
    FROM
        game_type
            LEFT JOIN
        game_rating ON game_rating.game_type_id = game_type.game_type_id
			LEFT JOIN
		subscription ON  game_type.game_type_id = subscription.game_type_id
    GROUP BY game_type.game_type_id;

-- -----------------------------------------------------
-- View `reservation_and_all`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `reservation_and_all` ;
DROP TABLE IF EXISTS `reservation_and_all`;
CREATE  OR REPLACE VIEW `reservation_and_all` AS
    SELECT 
        reservation.*,
        concat(user.name, ' ', user.surname) as borrower_name,
        game_box.tracking_code,
        game_type.game_name,
        game_type.min_players,
        game_type.max_players,
        desk.capacity as desk_capacity,
        COUNT(reservation_users.user_id) AS signed_players
    FROM
        reservation
            JOIN
        game_box ON game_box.game_box_id = reservation.game_box_id
            JOIN
        game_type ON game_type.game_type_id = game_box.game_type_id
            JOIN
        user ON reservation.reservee_user_id = user.user_id
            LEFT JOIN
        desk ON reservation.desk_id = desk.desk_id
            LEFT JOIN
        reservation_users ON reservation_users.reservation_id = reservation.reservation_id
    GROUP BY reservation.reservation_id;

-- -----------------------------------------------------
-- View `user_extended`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `user_extended` ;
DROP TABLE IF EXISTS `user_extended`;
CREATE  OR REPLACE VIEW `user_extended` AS
    SELECT 
        user.*, COUNT(game_rating.game_type_id) AS ratings
    FROM
        user
            LEFT JOIN
        game_rating ON game_rating.user_id = user.user_id
    GROUP BY game_rating.user_id
;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
